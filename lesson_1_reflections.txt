How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
Saving work often. Comparing differences between versions to see why one version works and another does not.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
Pros: Complete control and flexibility when doing a manual commit
Con: Onus lies on commiting. If not done, changes may become too big to commit or too small.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Ideally suited for code where changes can happen in multiple files. Google docs are typically statnd alone and therefore are treated seperately.

How can you use the commands git log and git diff to view the history of files?
git log: use to find check in/check out history of the repoistory by reviewing commits
git diff: use to find the differences (lines added/deleted) between different versions of commits

How might using version control make you more confident to make changes that could break something?
Revert back to previous veriosn if something breaks

Now that you have your workspace set up, what do you want to try using Git for?
Explore Git
